.container-fluid[style="padding:0px;"]
  ul.nav.nav-pills
    li.active.col-xs-6
      a[data-toggle='pill' href="#all-fruits"] All Fruits
    li.col-xs-6
      a[data-toggle='pill' href="#premium-fruits"] Premium Fruits
  .tab-content
    #all-fruits.tab-pane.fade.in.active
      br
      - @products.each do |product|
        .col-xs-6.col-sm-4.col-md-3
          - if product.pictures.present?
            = link_to image_tag(product.pictures.first.image, class:"img-thumbnail"), product_path(product)
          - else  
            = link_to image_tag('default.png'), product_path(product)
          .col-xs-10
            span
              = product.name
              | (
              = product.origin  
              | )
            br  
              - if product.price_discount.present? 
                span              
                  = number_with_delimiter(product.price_discount,delimiter: '.')
                  |(vnd)
                br
                span.discount
                  = number_with_delimiter(product.price,delimiter: '.')
                  |(vnd)
                span.percent
                  |  -
                  = ((1- (product.price_discount.to_f / product.price)) * 100).round
                  | %
            /.col-xs-6.pull-left
            .col-xs-12
              = button_to_with_icon "Add to cart", order_items_path(product_id: product), class: 'btn btn-info'
    #premium-fruits.tab-pane.fade
      br
      - hotProduct.each do |product_id|
        - product = findProduct(product_id[0])
        .col-xs-6.col-sm-4.col-md-3
          - if product.pictures.present?
            = link_to image_tag(product.pictures.first.image, class:"img-thumbnail"), product_path(product)
          - else  
            = link_to image_tag('default.png'), product_path(product)
          .col-xs-10
            strong 
              = product.name
              br
              = number_with_delimiter(product.price,delimiter: '.')
              |(vnd)/kg
              br
              = product.origin  
            hr
            /.col-xs-6.pull-left
            .col-xs-12
              = button_to_with_icon "Add to cart", order_items_path(product_id: product), class: 'btn btn-info'

    
= link_to 'Log out', destroy_user_session_path,method: :delete,class:'btn btn-success'

javascript:
  function htmlbodyHeightUpdate(){
    var height3 = $( window ).height()
    var height1 = $('.nav').height()+50   
    height2 = $('.main').height()
    if(height2 > height3){
      $('html').height(Math.max(height1,height3,height2)+10);
      $('body').height(Math.max(height1,height3,height2)+10);
    }
    else
    {
      $('html').height(Math.max(height1,height3,height2));
      $('body').height(Math.max(height1,height3,height2));
    }
  }
  (function( $ ) {
  //Function to animate slider captions 
  function doAnimations( elems ) {
  //Cache the animationend event in a variable
    var animEndEv = 'webkitAnimationEnd animationend';
    
    elems.each(function () {
      var $this = $(this),
        $animationType = $this.data('animation');
      $this.addClass($animationType).one(animEndEv, function () {
        $this.removeClass($animationType);
      });
    });
  }

  //Variables on page load 
  var $myCarousel = $('#carousel-example-generic'),
    $firstAnimatingElems = $myCarousel.find('.item:first').find("[data-animation ^= 'animated']");
    
  //Initialize carousel 
  $myCarousel.carousel();

  //Animate captions in first slide on page load 
  doAnimations($firstAnimatingElems);

  //Pause carousel  
  $myCarousel.carousel('pause');


  //Other slides to be animated on carousel slide event 
  $myCarousel.on('slide.bs.carousel', function (e) {
    var $animatingElems = $(e.relatedTarget).find("[data-animation ^= 'animated']");
    doAnimations($animatingElems);
  });  
    $('#carousel-example-generic').carousel({
        interval:3000,
        pause: "false"
    });

  })(jQuery);
   
  $(document).ready(function () {
    htmlbodyHeightUpdate()
    $( window ).resize(function() {
      htmlbodyHeightUpdate()
    });
    $( window ).scroll(function() {
      height2 = $('.main').height()
        htmlbodyHeightUpdate()
    });

    add_cart = $('.btn-info').closest('.cart-btn');
    total_items = $('.cart-text').text();
    add_cart.on('click',function(){
      total_items = parseInt(total_items) + 1
      $('.cart-text').text(total_items);
    });
    $('.btn.btn-info').hide();
    $('.col-xs-6.col-sm-4.col-md-3').hover(function(){
      img = $(this).closest('div').find('.img-thumbnail')
      icon = $(this).closest('div').find('.btn.btn-info')
      icon.click(function(){
        $(this).css('opacity','0.5').text('Adding....').delay(300).queue(function(){
          $(this).attr('disabled',true);
          $(this).text('Added').delay(1000).dequeue().queue(function(){
            $(this).css('opacity','1')
            $(this).removeAttr('disabled').text('Add to cart').dequeue() 
          });
        });
      });  
      img.css('opacity','0.5')
      icon.fadeIn('slow')
      },function(){
        img.css('opacity','1');
        icon.fadeOut('slow');
    });
  });
