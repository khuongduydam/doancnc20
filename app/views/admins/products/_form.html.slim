= simple_form_for [:admins, @product], :html => { :multipart => true, :id => "form_product" } do |f|
  .field
    = f.input :name , label: t('application.name')   
  .field 
    = f.input :price, label: t('application.price')
  .field
    = f.input :price_discount,label: t('application.price_discount')  
  .field 
    = f.input :origin, label: t('application.origin')    
  .field
    = f.input :category_id,:collection => categories,:label_method => :name,:value_method => :id,label: t('layouts.header.category') ,:include_blank => false 
  .field 
    = f.input :description, as: :text, label: t('application.description')    
  .field 
    - if params[:controller] == 'admins/products' && (params[:action] == 'new' || params[:action] == 'create' )
      = f.input :quantity, label: t('application.quantity'),min: 1
    - if params[:controller] == 'admins/products' && (params[:action] == 'edit' || params[:action] == 'update' )
      = f.input :quantity, label: "Now have quantity (kg)", readonly: true
      = f.label "Add Quantity (kg)"     
      input.form-control#addQuan[type="text" name="product[addQuantity]"]
  .field#img
    = f.label t('application.image')    
    - if params[:controller] == 'admins/products' && (params[:action] == 'new' || params[:action] == 'create' )
        = f.simple_fields_for :pictures, @product.pictures.build do |picture|
          = picture.file_field :image, :multiple => true, name: "product[pictures_attributes][][image]"
    - if params[:controller] == 'admins/products' && (params[:action] == 'edit' || params[:action] == 'update' )

      = f.simple_fields_for :pictures do |picture|
        .img_pic
          = image_tag picture.object.image_url
          = picture.check_box :_destroy 
          = picture.label "Remove"
          
          = picture.label "Chance"
          = picture.file_field :image     
      = f.label "Add new image"
      = f.file_field :image, multiple: true, name: "product[image][]"
  .actions
    = f.submit I18n.t('application.submit'),class:'btn btn-success btn-md'
javascript:
  $(document).ready(function () {
    $("#form_product").validate({
      rules: {
        "product[name]": {required: true, minlength: 2},
        "product[price]": {required: true, number: true, min: 0},
        "product[price_discount]": {required: true, number: true},
        "product[origin]": {required: true, minlength: 3},
        "product[quantity]": {required: true, digits: true, range: [1,1000]},
        "product[description]": {required: true, minlength: 10},
        "product[pictures_attributes][][image]": {required: true, accept: true}
      },
      messages:{
        "product[name]": {required: 'Please enter a product name', minlength: 'Name is too short'},
        "product[price]": {required: 'Please enter a product price', number: 'Must be number', min: 'Number is too low'},
        "product[origin]": {required: 'Please enter product\'s origin', minlength: 'Origin is to short'},
        "product[quantity]": {required: 'Please enter product\s quantity', digits: 'Must be digital number', range: 'Number is not allow'},
        "product[description]": {required: 'Please descript for product', minlength: 'Not enough characters'},
        "product[pictures_attributes][][image]": {required: 'Please choose one image', accept: 'Must be an image type'}
      },
      highlight: function(element){
        $(element).closest('.form-group').addClass('has-error');
      },
      unhighlight: function(element){
        $(element).closest('.form-group').removeClass('has-error');
      },
      submitHandler: function(form) {
        $('form').find(":submit").attr("disabled", true).attr("value","Submitting...");
        form.submit();
      },
      errorClass :'help-block',
      errorPlacement: function(error, element){
        error.insertAfter(element);
      }
    });

  });
  $("#form_product").submit(function(){
    var path =  window.location.pathname.slice(-4);
    if (path == "/new") {
      var img = $("#product_pictures_attributes_0_image").val().length;
      if (img==0) {
        //alert("Please choose at least one image!");
        return false;
      }
    }
    if (path == "edit") {
      var countImg = $("#img").find("img").length;
      var countAddImg = $("#product_image").val().length;
      if ((countImg==0) && (countAddImg == 0)) {
        alert("Please choose at least one image");
        return false;
      }
      var quan = parseInt($("#product_quantity").val());
      var adQuan = parseInt($("#addQuan").val());
      if ((quan+adQuan) > 1000) {
        alert("Quantity and add quantity must less than or equal to 1000.")
        return false;
      }
    }
  });

  $('.img_pic input:checkbox').change(function(){ 
    $(this).closest(".img_pic").hide();
  });